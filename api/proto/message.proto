syntax = "proto3";
package message;
option go_package = "proto_build/;proto_build";


import "google/api/annotations.proto";
//import "github.com/mwitkow/go-proto-validators@v0.3.2/validator.proto";
import "github.com/envoyproxy/protoc-gen-validate@v0.6.3/validate/validate.proto";

//消息类型
enum MESSAGE_TYPE {
  TEXT = 0;  //文本消息。
  LOCATION = 1;  //地理位置消息。
  FACE = 2; // 表情消息。
  SOUND = 3;//  语音消息。
  IMAGE = 4;//  图像消息。
  FILE = 5;//  文件消息。
  Video = 6;//  视频消息。
}

//文本消息
message TextMessage{
  uint64 id = 1;
  string content = 2;
}

//地理位置消息
message LocationMessage{
  uint64 id = 1;
  string cover_image = 2;
  double lat = 3;
  double lng = 4;
  string map_link = 5;
  string desc = 6;
}

//表情消息
message FaceMessage{
  uint64 id = 1;
  string symbol = 2;
}

//语音消息
message SoundMessage{
  uint64 id = 1;
  string url = 2;
  uint64 size = 3;
  uint64 seconds = 4;
}

//图片类型
enum IMAGE_TYPE{
  ORIGIN = 0; //原图
  BIG = 1; //大图
  THUMBNAIL = 2;// 缩略图
}
//图片格式
enum IMAGE_FORMAT{
  JPG = 0;
  GIF = 1;
  PNG = 2;
  BMP = 3;
  OTHER = 255;
}
//图片
message ImageMessageItem{
  IMAGE_TYPE type = 1; // 类型
  IMAGE_FORMAT format = 2; //格式
  uint64 size = 3; //大小
  uint64 width = 4; //宽度
  uint64 height = 5; //高度
  string url = 6; //链接地址
}

//图像消息
message ImageMessage{
  uint64 id = 1;
  repeated ImageMessageItem list = 2;
}
//文件消息
message FileMessage{
  uint64 id = 1;
  uint64 size = 2; //大小
  string name = 3; //文件名
  string url = 4; //链接地址
}
//视频格式
enum VIDEO_FORMAT{
  MP4 = 0;
  MOV = 1;
  WMV = 2;
  FLV = 3;
  AVI = 4;
  MKV = 5;
  OTHER_VIDEO_FORMAT = 255;
}
//视频消息
message VideoMessage{
  uint64 id = 1;
  uint64 size = 2;
  uint64 seconds = 3;
  string url = 4;
  string format = 5;
  string thumb_url = 6;
  uint64 thumb_size = 7;
  double thumb_width = 8;
  double thumb_height = 9;
  IMAGE_FORMAT thumb_format = 10;
}

message SendUserTextMessageRequest{
  uint64 to_user_id = 1 [(validate.rules).uint64 = {gt:0}];
  TextMessage text = 2 [(validate.rules).message = {required:true}];
}

message SendUserTextMessageResponse{
  uint64 id = 1;
}

message SendUserLocationMessageRequest{
  uint64 to_user_id = 2  [(validate.rules).uint64 = {gt:0}];
  LocationMessage location = 3 [(validate.rules).message = {required:true}] ;
}

message SendUserLocationMessageResponse{
  uint64 id = 1;
}

message SendUserFaceMessageRequest{
  uint64 to_user_id = 1 [(validate.rules).uint64 = {gt:0}];
  FaceMessage face = 2 [(validate.rules).message = {required:true}] ;
}

message SendUserFaceMessageResponse{
  uint64 id = 1;
}

message SendUserSoundMessageRequest{
  uint64 to_user_id = 1 [(validate.rules).uint64 = {gt:0}];
  SoundMessage sound = 2 [(validate.rules).message = {required:true}] ;
}

message SendUserSoundMessageResponse{
  uint64 id = 1;
}

message SendUserVideoMessageRequest{
  uint64 to_user_id = 1 [(validate.rules).uint64 = {gt:0}];
  VideoMessage video = 2 [(validate.rules).message = {required:true}] ;
}

message SendUserVideoMessageResponse{
  uint64 id = 1;
}

message SendUserImageMessageRequest{
  uint64 to_user_id = 1 [(validate.rules).uint64 = {gt:0}];
  ImageMessageItem image = 2 [(validate.rules).message = {required:true}] ;
}

message SendUserImageMessageResponse{
  uint64 id = 1;
}

message SendUserFileMessageRequest{
  uint64 to_user_id = 1 [(validate.rules).uint64 = {gt:0}];
  FileMessage file = 2 [(validate.rules).message = {required:true}] ;
}

message SendUserFileMessageResponse{
  uint64 id = 1;
}


message SendGroupTextMessageRequest{
  uint64 to_group_id = 1 [(validate.rules).uint64 = {gt:0}];
  repeated uint64 at_user_id = 2 [(validate.rules).repeated.items.uint64 = {gt:0}];
  TextMessage text = 3  [(validate.rules).message = {required:true}];
}

message SendGroupTextMessageResponse{
  uint64 id = 1;
}

message SendGroupLocationMessageRequest{
  uint64 to_group_id = 1 [(validate.rules).uint64 = {gt:0}];
  repeated uint64 at_user_id = 2 [(validate.rules).repeated.items.uint64 = {gt:0}];
  LocationMessage location = 3 [(validate.rules).message = {required:true}] ;
}

message SendGroupLocationMessageResponse{
  uint64 id = 1;
}

message SendGroupFaceMessageRequest{
  uint64 to_group_id = 1 [(validate.rules).uint64 = {gt:0}];
  repeated uint64 at_user_id = 2 [(validate.rules).repeated.items.uint64 = {gt:0}];
  FaceMessage face = 3 [(validate.rules).message = {required:true}] ;
}

message SendGroupFaceMessageResponse{
  uint64 id = 1;
}

message SendGroupSoundMessageRequest{
  uint64 to_group_id = 1 [(validate.rules).uint64 = {gt:0}];
  repeated uint64 at_user_id = 2 [(validate.rules).repeated.items.uint64 = {gt:0}];
  SoundMessage sound = 3 [(validate.rules).message = {required:true}] ;
}

message SendGroupSoundMessageResponse{
  uint64 id = 1;
}

message SendGroupVideoMessageRequest{
  uint64 to_group_id = 1 [(validate.rules).uint64 = {gt:0}];
  repeated uint64 at_user_id = 2 [(validate.rules).repeated.items.uint64 = {gt:0}];
  VideoMessage video = 3 [(validate.rules).message = {required:true}] ;
}

message SendGroupVideoMessageResponse{
  uint64 id = 1;
}

message SendGroupImageMessageRequest{
  uint64 to_group_id = 1 [(validate.rules).uint64 = {gt:0}];
  repeated uint64 at_user_id = 2 [(validate.rules).repeated.items.uint64 = {gt:0}];
  ImageMessageItem image = 3 [(validate.rules).message = {required:true}] ;
}

message SendGroupImageMessageResponse{
  uint64 id = 1;
}

message SendGroupFileMessageRequest{
  uint64 to_group_id = 1 [(validate.rules).uint64 = {gt:0}];
  repeated uint64 at_user_id = 2 [(validate.rules).repeated.items.uint64 = {gt:0}];
  FileMessage file = 3 [(validate.rules).message = {required:true}] ;
}

message SendGroupFileMessageResponse{
  uint64 id = 1;
}

message ParseMessageRequest{
  bytes content = 1 [(validate.rules).bytes = {min_len:1}];
}

message ParseMessageResponse{
}

service MessageService {

  rpc SendUserTextMessage(SendUserTextMessageRequest) returns(SendUserTextMessageResponse){
    option (google.api.http) = {
      post: "/v1/api/message/text/user",
      body:"*"
    };
  }

  rpc SendUserLocationMessage(SendUserLocationMessageRequest) returns(SendUserLocationMessageResponse){
    option (google.api.http) = {
      post: "/v1/api/message/location/user",
      body:"*"
    };
  }

  rpc SendUserFaceMessage(SendUserFaceMessageRequest) returns(SendUserFaceMessageResponse){
    option (google.api.http) = {
      post: "/v1/api/message/face/user",
      body:"*"
    };
  }

  rpc SendUserSoundMessage(SendUserSoundMessageRequest) returns(SendUserSoundMessageResponse){
    option (google.api.http) = {
      post: "/v1/api/message/sound/user",
      body:"*"
    };
  }

  rpc SendUserVideoMessage(SendUserVideoMessageRequest) returns(SendUserVideoMessageResponse){
    option (google.api.http) = {
      post: "/v1/api/message/video/user",
      body:"*"
    };
  }

  rpc SendUserImageMessage(SendUserImageMessageRequest) returns(SendUserImageMessageResponse){
    option (google.api.http) = {
      post: "/v1/api/message/image/user",
      body:"*"
    };
  }

  rpc SendUserFileMessage(SendUserFileMessageRequest) returns(SendUserFileMessageResponse){
    option (google.api.http) = {
      post: "/v1/api/message/file/user",
      body:"*"
    };
  }

  rpc SendGroupTextMessage(SendGroupTextMessageRequest) returns(SendGroupTextMessageResponse){
    option (google.api.http) = {
      post: "/v1/api/message/text/group",
      body:"*"
    };
  }

  rpc SendGroupLocationMessage(SendGroupLocationMessageRequest) returns(SendGroupLocationMessageResponse){
    option (google.api.http) = {
      post: "/v1/api/message/location/group",
      body:"*"
    };
  }

  rpc SendGroupFceMessage(SendGroupFaceMessageRequest) returns(SendGroupFaceMessageResponse){
    option (google.api.http) = {
      post: "/v1/api/message/face/group",
      body:"*"
    };
  }

  rpc SendGroupSoundMessage(SendGroupSoundMessageRequest) returns(SendGroupSoundMessageResponse){
    option (google.api.http) = {
      post: "/v1/api/message/sound/group",
      body:"*"
    };
  }

  rpc SendGroupVideoMessage(SendGroupVideoMessageRequest) returns(SendGroupVideoMessageResponse){
    option (google.api.http) = {
      post: "/v1/api/message/video/group",
      body:"*"
    };
  }

  rpc SendGroupImageMessage(SendGroupImageMessageRequest) returns(SendGroupImageMessageResponse){
    option (google.api.http) = {
      post: "/v1/api/message/image/group",
      body:"*"
    };
  }

  rpc SendGroupFileMessage(SendGroupFileMessageRequest) returns(SendGroupFileMessageResponse){
    option (google.api.http) = {
      post: "/v1/api/message/file/group",
      body:"*"
    };
  }
}

